"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const getUser_1 = require("../../controller/user/getUser");
const getFollows_1 = require("../../controller/user/getFollows");
const env_1 = __importDefault(require("../../config/env"));
const multer_1 = require("../../config/multer");
const updatePhoto_1 = require("../../controller/user/updatePhoto");
const getGuest_1 = require("../../controller/user/getGuest");
const saveNotificationId_1 = require("../../controller/user/saveNotificationId");
const getNotifications_1 = require("../../controller/user/getNotifications");
const profilePhotoUpload_1 = require("../../modules/handlePhotoUpload/profilePhotoUpload");
const getFollowersList_1 = require("../../controller/services/follow/getFollowersList");
const getFollowingList_1 = require("../../controller/services/follow/getFollowingList");
const handleErrors_1 = require("../../middleware/validation/handleErrors");
const inputValidation_1 = require("../../middleware/validation/inputValidation");
const changeData_1 = require("../../controller/user/changeData");
const logout_1 = require("../../controller/user/logout");
const deleteAccount_1 = require("../../controller/user/deleteAccount");
const isProduction = env_1.default.stage === "production";
const router = (0, express_1.Router)();
router.get("/get-user", getUser_1.getUser);
router.get("/get-guest", getGuest_1.getGuest);
router.get("/get-follows", getFollows_1.getFollows);
router.get("/token-valid", (req, res, next) => {
    res.json({ msg: true });
});
router.get("/get-notifications", getNotifications_1.getNotifications);
router.post("/update-photo", multer_1.upload.single("photo"), profilePhotoUpload_1.profilePhotoUpload, updatePhoto_1.updatePhoto);
router.put("/update-notification-id", saveNotificationId_1.saveNotificationId);
router.get("/get-following", inputValidation_1.followerFollowingValidator, handleErrors_1.handleErrors, getFollowingList_1.getFollowingList);
router.get("/get-followers", inputValidation_1.followerFollowingValidator, handleErrors_1.handleErrors, getFollowersList_1.getFollowersList);
router.get("/logout", logout_1.logout);
router.put("/update-data", inputValidation_1.updateDataValidator, handleErrors_1.handleErrors, changeData_1.changeData);
router.delete("/delete-account", inputValidation_1.deleteAccountValidator, handleErrors_1.handleErrors, deleteAccount_1.deleteAccount);
exports.default = router;
