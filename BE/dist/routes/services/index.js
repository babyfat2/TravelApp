"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
// import { uploadOcean } from "./../../config/multer";
const handleErrors_1 = require("./../../middleware/validation/handleErrors");
const inputValidation_1 = require("./../../middleware/validation/inputValidation");
const express_1 = require("express");
const env_1 = __importDefault(require("../../config/env"));
const multer_1 = require("../../config/multer");
const getAllPosts_1 = require("../../controller/services/posts/getAllPosts");
const postContent_1 = require("../../controller/services/posts/postContent");
const getRandomPosts_1 = require("../../controller/services/posts/getRandomPosts");
const postPhoto_1 = require("../../controller/services/posts/postPhoto");
const followUser_1 = require("../../controller/services/follow/followUser");
const searchForPosts_1 = require("../../controller/services/posts/searchForPosts");
const getRandomPeople_1 = require("../../controller/services/follow/getRandomPeople");
const searchPeople_1 = require("../../controller/services/follow/searchPeople");
const unfollowUser_1 = require("../../controller/services/follow/unfollowUser");
const likePost_1 = require("../../controller/services/posts/likePost");
const postComment_1 = require("../../controller/services/posts/postComment");
const getCommentsByPost_1 = require("../../controller/services/posts/getCommentsByPost");
const getPostByFollowing_1 = require("../../controller/services/posts/getPostByFollowing");
const getMyPosts_1 = require("../../controller/services/posts/getMyPosts");
const getGuestPosts_1 = require("../../controller/services/posts/getGuestPosts");
const rePost_1 = require("../../controller/services/posts/rePost");
const postPhotoUpload_1 = require("../../modules/handlePhotoUpload/postPhotoUpload");
const getSinglePost_1 = require("../../controller/services/posts/getSinglePost");
const deletePostbyId_1 = require("../../controller/services/posts/deletePostbyId");
const postDestination_1 = require("../../controller/services/posts/postDestination");
const router = (0, express_1.Router)();
const isProduction = env_1.default.stage === "production";
router.post("/add-destination", inputValidation_1.addDesValidator, handleErrors_1.handleErrors, postDestination_1.postDestination);
router.post("/post", inputValidation_1.createPostValidator, handleErrors_1.handleErrors, postContent_1.postContent);
router.get("/all-posts", inputValidation_1.getPostsValidator, handleErrors_1.handleErrors, getAllPosts_1.getAllPosts);
router.get("/random-posts", getRandomPosts_1.getRandomPosts);
router.get("/random-people", getRandomPeople_1.getRandomFollowers);
router.get("/search-posts", inputValidation_1.searchValidator, handleErrors_1.handleErrors, searchForPosts_1.searchForPosts);
router.get("/search-people", inputValidation_1.searchValidator, handleErrors_1.handleErrors, searchPeople_1.searchPeople);
router.post("/upload-photos", multer_1.upload.array("photos"), postPhoto_1.postPhoto);
router.post("/upload-photo", multer_1.upload.single("photo"), postPhotoUpload_1.postPhotoUpload);
router.get("/follow", inputValidation_1.followValidator, handleErrors_1.handleErrors, followUser_1.followUser);
router.get("/unfollow", inputValidation_1.followValidator, handleErrors_1.handleErrors, unfollowUser_1.unfollowUser);
router.get("/like-post", inputValidation_1.likeValidator, handleErrors_1.handleErrors, likePost_1.like);
router.post("/post-comment", inputValidation_1.postCommentValidator, handleErrors_1.handleErrors, postComment_1.postComment);
router.get("/get-postComment", inputValidation_1.getCommentValidator, handleErrors_1.handleErrors, getCommentsByPost_1.getCommentByPost);
router.get("/followed-posts", inputValidation_1.getPostsValidator, handleErrors_1.handleErrors, getPostByFollowing_1.getPostByFollowing);
router.get("/my-posts", inputValidation_1.getPostsValidator, handleErrors_1.handleErrors, getMyPosts_1.getMyPosts);
router.get("/single-post", getSinglePost_1.getSinglePost);
router.get("/guest-posts", inputValidation_1.getPostsValidator, handleErrors_1.handleErrors, getGuestPosts_1.getGuestPosts);
router.get("/re-post", inputValidation_1.followValidator, handleErrors_1.handleErrors, rePost_1.rePost);
router.delete("/delete-post", deletePostbyId_1.deletePostById);
exports.default = router;
